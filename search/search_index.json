{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection 1. Problem Statement The objective of this project is to explore how the horizontal range of a projectile varies with the launch angle . Though simple at first glance, this classical physics problem reveals deep insights into motion under gravity. Motivation Projectile motion is more than just a textbook topic\u2014it forms the foundation for countless real-world phenomena, from sports to spaceflight. Despite its apparent simplicity, this motion is governed by: Linear and quadratic kinematic relationships Free parameters like: Initial velocity $ v_0 $ Gravitational acceleration $ g $ Launch angle $ \\theta $ (Optional) Launch height These factors interact to produce a variety of possible outcomes and open doors to creative and scientific exploration. Task Overview 1\ufe0f- Theoretical Foundation Begin with Newton\u2019s equations to derive the projectile motion formula. Focus on the range equation : $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ Discuss how different values of \\(v_0\\) and \\(g\\) change the outcome. Explain how this results in a family of parabolic paths depending on launch parameters. 2. Analysis of the Range Examine how the range \\(R\\) varies with the angle of projection $ \\theta $. Observe and interpret the symmetry of the plot: $ \\theta = 45^\\circ $ yields maximum range Complementary angles (e.g., 30\u00b0 and 60\u00b0) yield the same range Understand how: Increasing $ v_0 $ increases range Increasing $ g $ reduces range 3. Real-World Applications Projectile motion applies to countless real-life situations: Sports : Kicking a football, shooting a basketball Engineering : Launching projectiles and drones Space Science : Modeling launches on the Moon or Mars Military : Calculating ballistic paths These models provide not just theoretical understanding but also practical insights. 4\ufe0f. Python Simulation import numpy as np import matplotlib.pyplot as plt def compute_range(v0, theta_deg, g=9.81): theta_rad = np.radians(theta_deg) return (v0**2 * np.sin(2 * theta_rad)) / g # Parameters angles = np.linspace(0, 90, 100) # Angles from 0\u00b0 to 90\u00b0 velocities = [10, 20, 30] # Different initial velocities in m/s # Plotting plt.figure(figsize=(8, 6)) for v in velocities: ranges = [compute_range(v, angle) for angle in angles] plt.plot(angles, ranges, label=f'v\u2080 = {v} m/s') plt.title('Range vs. Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.grid(True) plt.legend() plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-problem-statement","text":"The objective of this project is to explore how the horizontal range of a projectile varies with the launch angle . Though simple at first glance, this classical physics problem reveals deep insights into motion under gravity.","title":"1. Problem Statement"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion is more than just a textbook topic\u2014it forms the foundation for countless real-world phenomena, from sports to spaceflight. Despite its apparent simplicity, this motion is governed by: Linear and quadratic kinematic relationships Free parameters like: Initial velocity $ v_0 $ Gravitational acceleration $ g $ Launch angle $ \\theta $ (Optional) Launch height These factors interact to produce a variety of possible outcomes and open doors to creative and scientific exploration.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#task-overview","text":"","title":"Task Overview"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Begin with Newton\u2019s equations to derive the projectile motion formula. Focus on the range equation : $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ Discuss how different values of \\(v_0\\) and \\(g\\) change the outcome. Explain how this results in a family of parabolic paths depending on launch parameters.","title":"1\ufe0f- Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"Examine how the range \\(R\\) varies with the angle of projection $ \\theta $. Observe and interpret the symmetry of the plot: $ \\theta = 45^\\circ $ yields maximum range Complementary angles (e.g., 30\u00b0 and 60\u00b0) yield the same range Understand how: Increasing $ v_0 $ increases range Increasing $ g $ reduces range","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-real-world-applications","text":"Projectile motion applies to countless real-life situations: Sports : Kicking a football, shooting a basketball Engineering : Launching projectiles and drones Space Science : Modeling launches on the Moon or Mars Military : Calculating ballistic paths These models provide not just theoretical understanding but also practical insights.","title":"3. Real-World Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-python-simulation","text":"import numpy as np import matplotlib.pyplot as plt def compute_range(v0, theta_deg, g=9.81): theta_rad = np.radians(theta_deg) return (v0**2 * np.sin(2 * theta_rad)) / g # Parameters angles = np.linspace(0, 90, 100) # Angles from 0\u00b0 to 90\u00b0 velocities = [10, 20, 30] # Different initial velocities in m/s # Plotting plt.figure(figsize=(8, 6)) for v in velocities: ranges = [compute_range(v, angle) for angle in angles] plt.plot(angles, ranges, label=f'v\u2080 = {v} m/s') plt.title('Range vs. Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.grid(True) plt.legend() plt.show()","title":"4\ufe0f. Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Investigating the Dynamics of a Forced Damped Pendulum 1. Theoretical Foundation The equation of motion for a forced damped pendulum is: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] Where: \\(theta\\) : angular displacement \\(gamma\\) : damping coefficient \\(omega_0\\) : natural frequency of the pendulum \\(A\\) : amplitude of the driving force \\(omega\\) : frequency of the driving force Small-Angle Approximation For small angles, \\(\\sin(\\theta) \\approx \\theta\\) . The equation becomes: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is a linear second-order differential equation with periodic forcing. Resonance Resonance occurs when the driving frequency \\(omega\\) is close to the natural frequency \\(omega_0\\) . The system absorbs energy efficiently, and oscillations can grow significantly if damping is low. 2. Analysis of Dynamics Damping Coefficient \\(gamma\\) : Increases energy loss. High \\(gamma\\) suppresses oscillations. Driving Amplitude \\(A\\) : Larger values can lead to chaotic motion. Driving Frequency \\(omega\\) : Controls resonance and synchronization effects. Chaotic behavior emerges when nonlinearities dominate, especially at high amplitudes and low damping. 3. Practical Applications Energy Harvesting : Capturing vibrational energy using resonant systems. Suspension Bridges : Avoiding resonant frequencies during design. Oscillating Circuits : Analogous to RLC circuits with periodic input. 4. Implementation import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def pendulum(t, y, gamma, omega0, A, omega): theta, v = y dydt = [v, -gamma*v - omega0**2*np.sin(theta) + A*np.cos(omega*t)] return dydt def simulate(gamma, omega0, A, omega, y0, t_span, t_eval): sol = solve_ivp(pendulum, t_span, y0, args=(gamma, omega0, A, omega), t_eval=t_eval) return sol # Parameters gamma = 0.2 omega0 = 1.0 A = 1.2 omega = 0.8 y0 = [0.1, 0.0] t_span = (0, 100) t_eval = np.linspace(*t_span, 2000) sol = simulate(gamma, omega0, A, omega, y0, t_span, t_eval) plt.plot(sol.t, sol.y[0]) plt.xlabel('Time') plt.ylabel('Theta (rad)') plt.title('Forced Damped Pendulum') plt.grid() plt.show()","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"The equation of motion for a forced damped pendulum is: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] Where: \\(theta\\) : angular displacement \\(gamma\\) : damping coefficient \\(omega_0\\) : natural frequency of the pendulum \\(A\\) : amplitude of the driving force \\(omega\\) : frequency of the driving force","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small angles, \\(\\sin(\\theta) \\approx \\theta\\) . The equation becomes: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is a linear second-order differential equation with periodic forcing.","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance","text":"Resonance occurs when the driving frequency \\(omega\\) is close to the natural frequency \\(omega_0\\) . The system absorbs energy efficiently, and oscillations can grow significantly if damping is low.","title":"Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"Damping Coefficient \\(gamma\\) : Increases energy loss. High \\(gamma\\) suppresses oscillations. Driving Amplitude \\(A\\) : Larger values can lead to chaotic motion. Driving Frequency \\(omega\\) : Controls resonance and synchronization effects. Chaotic behavior emerges when nonlinearities dominate, especially at high amplitudes and low damping.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting : Capturing vibrational energy using resonant systems. Suspension Bridges : Avoiding resonant frequencies during design. Oscillating Circuits : Analogous to RLC circuits with periodic input.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def pendulum(t, y, gamma, omega0, A, omega): theta, v = y dydt = [v, -gamma*v - omega0**2*np.sin(theta) + A*np.cos(omega*t)] return dydt def simulate(gamma, omega0, A, omega, y0, t_span, t_eval): sol = solve_ivp(pendulum, t_span, y0, args=(gamma, omega0, A, omega), t_eval=t_eval) return sol # Parameters gamma = 0.2 omega0 = 1.0 A = 1.2 omega = 0.8 y0 = [0.1, 0.0] t_span = (0, 100) t_eval = np.linspace(*t_span, 2000) sol = simulate(gamma, omega0, A, omega, y0, t_span, t_eval) plt.plot(sol.t, sol.y[0]) plt.xlabel('Time') plt.ylabel('Theta (rad)') plt.title('Forced Damped Pendulum') plt.grid() plt.show()","title":"4. Implementation"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}